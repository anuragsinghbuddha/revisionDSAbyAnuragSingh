class Node:
    def __init__(self,data=0):
        self.data=data 
        self.next=None 
        
class Linkedlist:
    def __init__(self):
        self.head=None 
    def display(self):
        if(self.head==None):
            return('Linkedlist is Empty')
        else:
            temp=self.head 
            while(temp):
                print(temp.data,end="-->")
                temp=temp.next 
        print()
    def insert(self,data):
        p=Node(data)
        temp=self.head 
        self.head=p 
        p.next=temp 
        
    def merge(self,p,q):
        l=p.head
        l1=q.head
        
        dummy=Node()
        tail=dummy 
        while(l and l1):
            if(l.data<l1.data):
                tail.next=l 
                l=l.next 
            else:
                tail.next=l1 
                l1=l1.next 
            tail=tail.next 
        if(l):
            tail.next=l 
        elif(l1):
            tail.next=l1 
        self.head=dummy.next
        
   
                
        
if __name__ == '__main__':
    l=Linkedlist()
    l.insert(40)
    l.insert(30)
    l.insert(20)
    l.insert(10)
    l.display()
    l1=Linkedlist()
    l1.insert(6)
    l1.insert(4)
    l1.insert(2)
    l1.display()
    t=Linkedlist()
    t.merge(l,l1)
    t.display()
    
    
    
