class Node:
    def __init__(self,data):
        self.data=data 
        self.next=None 
        
class LinkedList:
    def __init__(self):
        self.head=None 
    def display(self):
        if(self.head==None):
            print("LinkedList is empty")
        else:
            temp=self.head 
            while(temp):
                print(temp.data,end="-->")
                temp=temp.next 
        print()
    def push_front(self,data):
        p=Node(data)
        temp=self.head 
        self.head=p 
        p.next=temp 
    def push_end(self,data):
        p=Node(data)
        temp=self.head 
        while(temp.next!=None):
            temp=temp.next 
        temp.next=p 
    def push_pos(self,pos,data):
        p=Node(data)
        temp=self.head 
        for i in range(pos-1):
            temp=temp.next
        r=temp.next
        temp.next=p 
        p.next=r
    def del_front(self):
        #self.head=self.head.next
        temp=self.head.next 
        self.head=None 
        self.head=temp 
    def del_end(self):
        temp=self.head 
        while(temp.next.next!=None):
            temp=temp.next 
        temp.next=None
    def del_pos(self,pos):
        temp=self.head 
        for i in range(pos-1):
            temp=temp.next 
        temp.next=temp.next.next
        
if __name__ == '__main__':
    l=LinkedList()
    l.push_front(10)
    l.push_front(20)
    l.push_end(5)
    l.push_pos(1,0)
    l.push_front(1)
    print("Original LinkedList")
    l.display()
    l.del_front()
    print("Linkedlist after deletion from front")
    l.display()
    l.del_end()
    print("Linkedlist after deletion from end")
    l.display()
    l.del_pos(1)
    print("Linkedlist after deletion from particular position")
    l.display()
        
        
        
        
        
